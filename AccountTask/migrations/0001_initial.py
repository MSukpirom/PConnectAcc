# Generated by Django 4.2.6 on 2023-12-26 10:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'address_base',
            },
        ),
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('active', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_images/')),
                ('permission', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'base_user',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('company_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('tax_id', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('service_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('create_client_date', models.DateTimeField(blank=True, null=True)),
                ('channal', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('detail', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('close', 'Close')], max_length=50)),
                ('company_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_company_address', to='AccountTask.addressbase')),
            ],
            options={
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'district',
            },
        ),
        migrations.CreateModel(
            name='Engagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_code', models.CharField(max_length=255)),
                ('start_date_service', models.DateTimeField()),
                ('end_date_service', models.DateTimeField()),
                ('start_date_period', models.DateTimeField()),
                ('end_date_period', models.DateTimeField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('close', 'Close')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('administrator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='admin_engagements', to='AccountTask.baseuser')),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='approver_engagements', to='AccountTask.baseuser')),
                ('categories', models.ManyToManyField(related_name='engagements', to='AccountTask.category')),
                ('clients', models.ManyToManyField(to='AccountTask.client')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='reviewer_engagements', to='AccountTask.baseuser')),
            ],
            options={
                'db_table': 'engagement',
            },
        ),
        migrations.CreateModel(
            name='EngagementDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AccountTask.category')),
            ],
            options={
                'db_table': 'engagement_doc',
            },
        ),
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'geography',
            },
        ),
        migrations.CreateModel(
            name='RegisterTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vat', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('vat_date', models.DateField(blank=True, null=True)),
                ('sbt', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('sbt_date', models.DateField(blank=True, null=True)),
                ('sso', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('sso_date', models.DateField(blank=True, null=True)),
                ('dbd_e_filling', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('dbd_e_filling_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'register_tax',
            },
        ),
        migrations.CreateModel(
            name='RegisterType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'register_type',
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'task_type',
            },
        ),
        migrations.CreateModel(
            name='TaskControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('open_job', 'Open Job'), ('in_progress', 'In Progress'), ('review', 'Review'), ('pending', 'Pending'), ('completed', 'Completed')], max_length=50)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to='AccountTask.baseuser')),
                ('engagement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='AccountTask.engagement')),
                ('task_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AccountTask.tasktype')),
            ],
            options={
                'db_table': 'task_control',
            },
        ),
        migrations.CreateModel(
            name='Subdistrict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('zipcode', models.PositiveIntegerField()),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AccountTask.district')),
            ],
            options={
                'db_table': 'subdistrict',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='AccountTask.country')),
                ('geography', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='AccountTask.geography')),
            ],
            options={
                'db_table': 'province',
            },
        ),
        migrations.CreateModel(
            name='EngagementDocDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('notification', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='approved_by', to='AccountTask.baseuser')),
                ('engagement_doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AccountTask.engagementdoc')),
                ('review_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='review_by', to='AccountTask.baseuser')),
            ],
            options={
                'db_table': 'engagement_doc_detail',
            },
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='AccountTask.province'),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('position', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('line', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('other', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_address', to='AccountTask.addressbase')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AccountTask.client')),
            ],
            options={
                'db_table': 'contact',
            },
        ),
        migrations.CreateModel(
            name='ClientPassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('password', models.TextField(blank=True, default=None, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AccountTask.client')),
                ('type_password', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AccountTask.registertype')),
            ],
            options={
                'db_table': 'client_password',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AccountTask.contact'),
        ),
        migrations.AddField(
            model_name='client',
            name='register_tax',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AccountTask.registertax'),
        ),
        migrations.AddField(
            model_name='addressbase',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AccountTask.district'),
        ),
        migrations.AddField(
            model_name='addressbase',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AccountTask.province'),
        ),
        migrations.AddField(
            model_name='addressbase',
            name='subdistrict',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AccountTask.subdistrict'),
        ),
    ]
